#!/usr/bin/env node

'use strict';

const fs = require('fs');
const path = require('path');
const jsondiffpatch = require('jsondiffpatch');

const collect = require('..');

function filter(name) {
    if (process.argv.length <= 2) {
        return true;
    }

    const match = part => name.includes(part);
    const negate = process.argv[2] === '!';
    const argv = process.argv.slice(negate ? 3 : 2);

    return negate ? !argv.some(match) : argv.some(match);
}

function run(name) {
    try {
        const title = path.basename(name, 'js');
        console.log(`${title}...`);

        const code = fs.readFileSync(name, 'utf8');
        const actual = collect(name);
        const expected = JSON.parse(fs.readFileSync(name + 'on', 'utf8'));

        const delta = jsondiffpatch.diff(actual.schemas, expected.schemas);

        if (delta) {
            jsondiffpatch.console.log(delta);
        }

        return !delta;
    } catch (ex) {
        console.log(ex.message);

        return false;
    }
}

function main() {
    process.chdir(__dirname);

    const success = fs.readdirSync(__dirname)
        .filter(name => path.extname(name) === '.js')
        .filter(filter)
        .reduce((success, name) => {
            const ok = run(name);

            return success && ok;
        }, true);

    process.exit(success ? 0 : 1);
}

main();
